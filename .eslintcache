[{"F:\\Projects\\assignment\\client\\src\\index.js":"1","F:\\Projects\\assignment\\client\\src\\reportWebVitals.js":"2","F:\\Projects\\assignment\\client\\src\\App.js":"3","F:\\Projects\\assignment\\client\\src\\views\\Home.js":"4","F:\\Projects\\assignment\\client\\src\\components\\Navbar.js":"5","F:\\Projects\\assignment\\client\\src\\views\\Sidebar.js":"6","F:\\Projects\\assignment\\client\\src\\components\\Styles.js":"7","F:\\Projects\\assignment\\client\\src\\config.js":"8","F:\\Projects\\assignment\\client\\src\\components\\FoodCard.js":"9","F:\\Projects\\assignment\\client\\src\\views\\Categories.js":"10","F:\\Projects\\assignment\\client\\src\\views\\Orders.js":"11","F:\\Projects\\assignment\\client\\src\\components\\OrdersList.js":"12","F:\\Projects\\assignment\\client\\src\\store.js":"13","F:\\Projects\\assignment\\client\\src\\Reducer\\rootReducer.js":"14","F:\\Projects\\assignment\\client\\src\\Reducer\\ordersReducer.js":"15","F:\\Projects\\assignment\\client\\src\\Action\\types.js":"16","F:\\Projects\\assignment\\client\\src\\Action\\actions.js":"17","F:\\Projects\\assignment\\client\\src\\Reducer\\processedOrderReducer.js":"18","F:\\Projects\\assignment\\client\\src\\views\\Billing.js":"19"},{"size":424,"mtime":1607258335927,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1830,"mtime":1607284115404,"results":"23","hashOfConfig":"21"},{"size":811,"mtime":1607206063819,"results":"24","hashOfConfig":"21"},{"size":609,"mtime":1607190162036,"results":"25","hashOfConfig":"21"},{"size":2153,"mtime":1607201629169,"results":"26","hashOfConfig":"21"},{"size":3665,"mtime":1607291278476,"results":"27","hashOfConfig":"21"},{"size":163,"mtime":1607296208795,"results":"28","hashOfConfig":"21"},{"size":2089,"mtime":1607262965925,"results":"29","hashOfConfig":"21"},{"size":831,"mtime":1607203218635,"results":"30","hashOfConfig":"21"},{"size":5610,"mtime":1607291223074,"results":"31","hashOfConfig":"21"},{"size":3201,"mtime":1607281259883,"results":"32","hashOfConfig":"21"},{"size":291,"mtime":1607260008164,"results":"33","hashOfConfig":"21"},{"size":270,"mtime":1607281868831,"results":"34","hashOfConfig":"21"},{"size":1377,"mtime":1607283964304,"results":"35","hashOfConfig":"21"},{"size":338,"mtime":1607290511210,"results":"36","hashOfConfig":"21"},{"size":128,"mtime":1607283862122,"results":"37","hashOfConfig":"21"},{"size":418,"mtime":1607290548484,"results":"38","hashOfConfig":"21"},{"size":6469,"mtime":1607290622023,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1unviqq",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"F:\\Projects\\assignment\\client\\src\\index.js",[],["83","84"],"F:\\Projects\\assignment\\client\\src\\reportWebVitals.js",[],"F:\\Projects\\assignment\\client\\src\\App.js",[],"F:\\Projects\\assignment\\client\\src\\views\\Home.js",["85"],"import { Grid } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FoodCard from \"../components/FoodCard\";\r\nimport { useStyles } from \"../components/Styles\";\r\nimport { config } from \"../config\";\r\n\r\nconst Home = () => {\r\n    const [foods, setFoods] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    const getFoods = () => {\r\n        Axios.get(`${config.api.path}/foods`).then((result) => {\r\n            if (result.status === 200) setFoods(result.data);\r\n        });\r\n    };\r\n\r\n    useEffect(getFoods, []);\r\n\r\n    return (\r\n        <Grid container alignItems=\"stretch\" spacing={2}>\r\n            {foods.map((food, i) => (\r\n                <FoodCard key={i} food={food} />\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","F:\\Projects\\assignment\\client\\src\\components\\Navbar.js",[],"F:\\Projects\\assignment\\client\\src\\views\\Sidebar.js",[],"F:\\Projects\\assignment\\client\\src\\components\\Styles.js",["86"],"import { blue } from \"@material-ui/core/colors\";\r\n\r\nconst { makeStyles } = require(\"@material-ui/core\");\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(12),\r\n            height: theme.spacing(12),\r\n        },\r\n    },\r\n    mainGrid: {\r\n        height: \"calc(100vh - 64px)\",\r\n        overflow: \"hidden\",\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n    },\r\n    icon: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5),\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"#777777\",\r\n        \"&:hover\": {\r\n            color: \"#000000\",\r\n        },\r\n    },\r\n    sideBarMenuSubTitle: {\r\n        textAlign: \"center\",\r\n    },\r\n    cardView: {\r\n        height: theme.spacing(32),\r\n        backgroundPosition: \"center center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"flex-end\",\r\n    },\r\n    cardMedia: {\r\n        height: 0,\r\n        paddingTop: \"75%\",\r\n    },\r\n    padding: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    overlay: {\r\n        display: \"block\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        background: \"rgb(0,0,0)\",\r\n        background:\r\n            \"linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.5) 30%, rgba(0,0,0,0) 100%)\",\r\n    },\r\n    dataArea: {\r\n        zIndex: 1,\r\n        padding: theme.spacing(1),\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    fab: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5),\r\n    },\r\n    orderWindowContainer: {\r\n        padding: theme.spacing(1),\r\n        height: \"100%\",\r\n    },\r\n    orderWindow: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        height: \"inherit\",\r\n    },\r\n    orderCardContent: {\r\n        flex: 1,\r\n        overflow: \"auto\",\r\n    },\r\n    alignHorizontal: {\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n    },\r\n    incDecIcon: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    qtyArea: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    qtyContainer: {\r\n        padding: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    noVerticalPadding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    noHorizontalPadding: {\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n    },\r\n    orderTotal: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    noBorderBottom: {\r\n        borderBottom: 0,\r\n    },\r\n    billButton: {\r\n        width: \"100%\",\r\n        padding: theme.spacing(1),\r\n        borderRadius: \"4px\",\r\n        textDecoration: \"none\",\r\n        color: blue[900],\r\n        textTransform: \"uppercase\",\r\n        \"&:hover\": {\r\n            backgroundColor: blue[100],\r\n            color: blue[900],\r\n        },\r\n    },\r\n    orderBookHeader: {\r\n        backgroundColor: blue[100],\r\n        color: blue[900],\r\n    },\r\n}));\r\n","F:\\Projects\\assignment\\client\\src\\config.js",[],"F:\\Projects\\assignment\\client\\src\\components\\FoodCard.js",[],"F:\\Projects\\assignment\\client\\src\\views\\Categories.js",[],"F:\\Projects\\assignment\\client\\src\\views\\Orders.js",["87"],"import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setAction } from \"../Action/actions\";\r\nimport { PROCESSORDERFROMQUEUE, RESETORDERQUEUE } from \"../Action/types\";\r\nimport OrdersList from \"../components/OrdersList\";\r\nimport { useStyles } from \"../components/Styles\";\r\n\r\nconst Orders = () => {\r\n    const classes = useStyles();\r\n    const orders = useSelector((state) => state.orders);\r\n    const processedOrders = useSelector((state) => state.processedOrders);\r\n    const [subTotal, setSubTotal] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const placeOrder = (e) => {\r\n        e.preventDefault();\r\n        if (orders.length) {\r\n            dispatch(setAction(PROCESSORDERFROMQUEUE, orders));\r\n        }\r\n        return;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let total = orders.reduce((order, { total }) => order + total, 0);\r\n        setSubTotal(total);\r\n    }, [orders]);\r\n\r\n    useEffect(() => {\r\n        if (processedOrders.length !== 0) dispatch(setAction(RESETORDERQUEUE));\r\n    }, [processedOrders]);\r\n\r\n    return (\r\n        <Grid container className={classes.orderWindowContainer}>\r\n            <Grid item component={Card} className={classes.orderWindow}>\r\n                <CardHeader\r\n                    title=\"Orders\"\r\n                    subheader=\"Select item from the menu to place order\"\r\n                    className={classes.orderBookHeader}\r\n                />\r\n                <CardContent\r\n                    className={`${classes.noVerticalPadding} ${classes.noHorizontalPadding} ${classes.orderCardContent}`}>\r\n                    {orders &&\r\n                        orders.map((order, i) => (\r\n                            <OrdersList order={order} index={i} key={i} />\r\n                        ))}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <TableContainer>\r\n                        <Table size=\"small\">\r\n                            <TableBody>\r\n                                {orders.length !== 0 && (\r\n                                    <>\r\n                                        <TableRow>\r\n                                            <TableCell\r\n                                                className={\r\n                                                    classes.noBorderBottom\r\n                                                }>\r\n                                                TOTAL\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                className={\r\n                                                    classes.noBorderBottom\r\n                                                }\r\n                                                align=\"right\">\r\n                                                <Typography\r\n                                                    variant=\"body1\"\r\n                                                    component=\"p\">\r\n                                                    <b>&#8377;{subTotal}</b>\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell\r\n                                                className={\r\n                                                    classes.noBorderBottom\r\n                                                }\r\n                                                colSpan={2}>\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    fullWidth\r\n                                                    onClick={(e) =>\r\n                                                        placeOrder(e)\r\n                                                    }>\r\n                                                    Place order\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </>\r\n                                )}\r\n                                {processedOrders.length !== 0 && (\r\n                                    <TableRow>\r\n                                        <TableCell\r\n                                            className={classes.noBorderBottom}\r\n                                            colSpan={2}>\r\n                                            <Button\r\n                                                component={Link}\r\n                                                to=\"/billing\"\r\n                                                fullWidth>\r\n                                                Pay bill\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </CardActions>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","F:\\Projects\\assignment\\client\\src\\components\\OrdersList.js",[],"F:\\Projects\\assignment\\client\\src\\store.js",[],"F:\\Projects\\assignment\\client\\src\\Reducer\\rootReducer.js",[],"F:\\Projects\\assignment\\client\\src\\Reducer\\ordersReducer.js",[],"F:\\Projects\\assignment\\client\\src\\Action\\types.js",[],"F:\\Projects\\assignment\\client\\src\\Action\\actions.js",[],"F:\\Projects\\assignment\\client\\src\\Reducer\\processedOrderReducer.js",[],"F:\\Projects\\assignment\\client\\src\\views\\Billing.js",["88"],"import {\r\n    Avatar,\r\n    Paper,\r\n    Table,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableBody,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAction } from \"../Action/actions\";\r\nimport { RESETPROCESSQUEUE } from \"../Action/types\";\r\n\r\nconst Billing = (props) => {\r\n    const processedOrders = useSelector((state) => state.processedOrders);\r\n    const subTotal = getSubTotal();\r\n    const [grandTotal, setGrandTotal] = useState(0);\r\n    const [checked, setChecked] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCheckBox = () => {\r\n        setChecked(!checked);\r\n    };\r\n\r\n    function getSubTotal() {\r\n        return (\r\n            processedOrders.reduce((order, { total }) => order + total, 0) || 0\r\n        );\r\n    }\r\n\r\n    const getGrandTotal = () => {\r\n        if (checked) {\r\n            let percent = 10 / 100;\r\n            let tenOfTotal = subTotal * percent;\r\n            let grand = subTotal + tenOfTotal;\r\n            setGrandTotal(grand);\r\n        } else {\r\n            setGrandTotal(subTotal);\r\n        }\r\n    };\r\n\r\n    const makePayment = () => {\r\n        setOpen(true);\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            setSuccess(true);\r\n            setTimeout(() => {\r\n                setOpen(false);\r\n                dispatch(setAction(RESETPROCESSQUEUE));\r\n                props.history.push(\"/\");\r\n            }, 3000);\r\n        }, 4000);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(getGrandTotal, [checked]);\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} style={{ marginBottom: \"15px\" }}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>\r\n                            <b>ITEM</b>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <b>QUANTITY</b>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <b>PRICE</b>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <b>TOTAL</b>\r\n                        </TableCell>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {processedOrders.map((order, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Avatar src={order.picture} />\r\n                                </TableCell>\r\n                                <TableCell>{order.name}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {order.quantity}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    &#8377;{order.price}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    &#8377;{order.total}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Grid container justify=\"flex-end\" style={{ marginBottom: \"15px\" }}>\r\n                <Grid item xs={6}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <b>SUB TOTAL</b>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        &#8377;{subTotal}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell style={{ padding: 0 }}>\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={handleCheckBox}\r\n                                        />\r\n                                        <b>TIP</b>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">+10%</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <b>GRAND TOTAL</b>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        &#8377;{grandTotal}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"flex-end\">\r\n                <Grid item xs={6} component={Paper}>\r\n                    <Button color=\"primary\" fullWidth onClick={makePayment}>\r\n                        MAKE PAYMENT\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"payment-dialog\"\r\n                open={open}>\r\n                <DialogTitle id=\"payment-dialog\">\r\n                    {!success ? `Payment processing` : `Payment success`}\r\n                </DialogTitle>\r\n                <DialogContent style={{ marginBottom: \"18px\" }}>\r\n                    {loading && <LinearProgress color=\"secondary\" />}\r\n                    {success && `You will be redirected in few seconds`}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Billing;\r\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":10,"column":11,"nodeType":"95","messageId":"96","endLine":10,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":65,"column":9,"nodeType":"99","messageId":"100","endLine":65,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":45,"column":8,"nodeType":"103","endLine":45,"endColumn":25,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":72,"column":30,"nodeType":"103","endLine":72,"endColumn":39,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'subTotal'. Either include it or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch, processedOrders]",{"range":"115","text":"116"},"Update the dependencies array to be: [checked, subTotal]",{"range":"117","text":"118"},[1340,1357],"[dispatch, processedOrders]",[1943,1952],"[checked, subTotal]"]